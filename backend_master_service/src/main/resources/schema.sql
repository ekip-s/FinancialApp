drop table IF EXISTS person cascade;

CREATE TABLE IF NOT EXISTS Person (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    username varchar(100) NOT NULL,
    year_of_birth int NOT NULL,
    password varchar NOT NULL,
    account_id bigint,
    creation_dt TIMESTAMP WITHOUT TIME ZONE,
    version int,
    CONSTRAINT pk_person PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS Account (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    owner_id bigint,
    balance numeric(19, 4),
    creation_dt TIMESTAMP WITHOUT TIME ZONE,
    version int,
    CONSTRAINT pk_account PRIMARY KEY (id),
    CONSTRAINT fk_account_person FOREIGN KEY (owner_id) REFERENCES Person
);

CREATE TABLE IF NOT EXISTS Category (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    category_name varchar(100),
    creation_dt TIMESTAMP WITHOUT TIME ZONE,
    version int,
    CONSTRAINT pk_category PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS Transaction (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    account_id bigint,
    amount numeric(19, 4),
    category_id bigint,
    another_category varchar(100),
    creation_dt TIMESTAMP WITHOUT TIME ZONE,
    version int,
    CONSTRAINT pk_transaction PRIMARY KEY (id),
    CONSTRAINT fk_transaction_account FOREIGN KEY (account_id) REFERENCES Account,
    CONSTRAINT fk_transaction_category FOREIGN KEY (category_id) REFERENCES Category
);

CREATE TABLE IF NOT EXISTS Apply_to_frendslist (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    status SMALLINT,
    comment varchar(200),
    master_id bigint,
    slave_id bigint,
    creation_dt TIMESTAMP WITHOUT TIME ZONE,
    version int,
    CONSTRAINT pk_frendslist PRIMARY KEY (id),
    CONSTRAINT fk_frendslist_person_master FOREIGN KEY (master_id) REFERENCES Person,
    CONSTRAINT fk_frendslist_person_slave FOREIGN KEY (slave_id) REFERENCES Person
);

CREATE UNIQUE INDEX IF NOT EXISTS username_index ON Person(username);
ALTER TABLE Person ADD FOREIGN KEY (account_id) REFERENCES Account;